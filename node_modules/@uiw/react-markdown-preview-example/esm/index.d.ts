/// <reference types="react" />
import '@wcj/dark-mode';
import type { CodeBlockData } from 'markdown-react-code-preview-loader';
import type { MarkdownPreviewProps } from '@uiw/react-markdown-preview';
import { Github } from './Github';
import { Corners } from './Corners';
import { Example } from './Example';
import { NavMenu } from './NavMenu';
export declare const SupVersion: import("styled-components").IStyledComponent<"web", import("styled-components/dist/types").FastOmit<import("react").DetailedHTMLProps<import("react").HTMLAttributes<HTMLElement>, HTMLElement>, never>>;
export interface MarkdownPreviewExampleProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {
    source: string;
    components: CodeBlockData['components'];
    data: CodeBlockData['data'];
    version?: string;
    title?: JSX.Element | string;
    markdownProps?: MarkdownPreviewProps;
    exampleProps?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>;
    logo?: JSX.Element | null;
    description?: JSX.Element | string;
    disableCorners?: boolean;
    disableDarkMode?: boolean;
    disableHeader?: boolean;
    disableBackToUp?: boolean;
}
declare const InternalMarkdownPreviewExample: import("react").ForwardRefExoticComponent<MarkdownPreviewExampleProps & import("react").RefAttributes<HTMLUListElement>>;
type ExampleComponent = typeof InternalMarkdownPreviewExample & {
    Example: typeof Example;
    Github: typeof Github;
    Corners: typeof Corners;
    NavMenu: typeof NavMenu;
};
declare const MarkdownPreviewExample: ExampleComponent;
export default MarkdownPreviewExample;
